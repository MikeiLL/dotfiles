# use Node's blc to check broken links
# see: https://github.com/stevenvachon/broken-link-checker

PATH=/usr/local/lib:/usr/local/bin:/usr/local/sbin:~/bin
PATH=/usr/local/bin:/usr/local/sbin:~/bin:/usr/bin:$PATH

# this might make gettext available in env
PATH=$PATH:/Applications/Poedit.app/Contents/MacOS
PATH="/Applications/VirtualBox.app/Contents/MacOS:$PATH"
# PATH=$PATH:/Library/Python/2.7/site-packages/

PATH="$HOME/.npm-packages/bin:$PATH"
PATH="$HOME/.npm/bin:$PATH"
PATH="$PATH:/Volumes/Oggun/Applications/flutter/bin"

# for Rosuav's shed
PATH=$PATH:~/shed
PATH=$PATH:/Library/TeX/texbin/

PATH="$PATH:$HOME/.composer/vendor/bin"

# For Homebrew
PATH="/usr/local/opt/python/libexec/bin:$PATH"

# for lilypond
PATH=$PATH:~/bin:/usr/texbin
PATH=/usr/local/texlive/2016/bin/x86_64-darwin:$PATH

PATH=$PATH:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Applications/Keybase.app/Contents/SharedSupport/bin:/usr/local/MacGPG2/bin:
PATH="/usr/local/opt/ruby/bin:$PATH"

# Anaconda
# PATH=$PATH:"/usr/local/anaconda3/bin"
# PATH=$PATH:"/Users/mikekilmer/anaconda/bin"
PATH=$PATH:"/Users/mikekilmer/Rosuav/shed"

# Postgres
PATH=$PATH:/usr/local/opt/postgresql@15/bin/


# ZSH Homebrew fix
PATH=/opt/homebrew/bin:$PATH

# Ruby, icu4c
PATH="/usr/local/opt/icu4c/bin:$PATH"
PATH="/usr/local/opt/icu4c/sbin:$PATH"


# for valet+
# PATH="/usr/local/opt/openssl@1.1/bin:$PATH"
# PATH="/usr/local/opt/php@7.2/bin:$PATH"
# PATH="/usr/local/opt/valet-php@7.2/bin:$PATH"
# PATH="/usr/local/opt/valet-php@7.2/sbin:$PATH"
# PATH="/usr/local/opt/valet-php@7.4/bin:$PATH"
# PATH="/usr/local/opt/valet-php@7.4/sbin:$PATH"
# PATH="/usr/local/opt/valet-php@7.3/bin:$PATH"

PATH="/usr/local/opt/mysql@5.7/bin:$PATH"


# React Native
# export ANDROID_HOME=/usr/local/share/android-sdk
# PATH=$PATH:$ANDROID_HOME/emulator
# PATH=$PATH:$ANDROID_HOME/tools
# PATH=$PATH:$ANDROID_HOME/platform-tools
# PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin
# export ANDROID_SDK_ROOT=/usr/local/share/android-sdk
# export ANDROID_SDK_HOME=/Volumes/Oggun/Android/.android

# For python from Pyenv
export PYENV_ROOT="$HOME/.pyenv"

PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"

PATH="/usr/local/opt/ruby/bin:$PATH"

# The php.ini and php-fpm.ini file can be found in: /usr/local/etc/php/8.1/
# PATH="/usr/local/opt/php@8.1/sbin:$PATH"
# PATH="/usr/local/opt/php@8.1/bin:$PATH"
# PATH="/usr/local/opt/php@8.2/sbin:$PATH"
# PATH="/usr/local/opt/php@8.2/bin:$PATH"
# PATH="/usr/local/opt/php@8.0/sbin:$PATH"
# PATH="/usr/local/opt/php@8.0/bin:$PATH"

PATH="/usr/local/opt/ruby/bin:/usr/local/lib/ruby/gems/3.2.0/bin:$PATH"

# Default Python (Arduino was not finding it.)
# PATH="/usr/local/opt/python:$PATH"
PATH="/usr/local/bin/python:$PATH"

# Try gnu-sed (via Brew) over native osX version
# PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"

export PATH

# For python from Pyenv
eval "$(pyenv init --path)"

# pyenv load automatically
eval "$(pyenv init -)"

# For pyenv-virtualenv
if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi


# for Ruby
#source "$(brew --prefix)/opt/chruby/share/chruby/chruby.sh"
#source "$(brew --prefix)/opt/chruby/share/chruby/auto.sh"
#"chruby ruby-3.1.3" # run 'chruby' to see actual version

# Other Environment Variables
CPPFLAGS="-I/usr/local/opt/ruby/include"
CPPFLAGS="$CPPFLAGS -I/usr/local/opt/postgresql@15/include -I/usr/local/opt/icu4c/include"
CPPFLAGS="$CPPFLAGS -I/usr/local/include"
# CPPFLAGS="$CPPFLAGS -I/usr/local/opt/valet-php@7.2/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/valet-php@7.4/include -I/usr/local/opt/php@8.1/include"
CPPFLAGS="$CPPFLAGS -I/usr/local/opt/ruby/include"
CPPFLAGS="-I/usr/local/opt/mysql@5.7/include"
export CPPFLAGS

# For pkg-config to find mysql@5.7:
export PKG_CONFIG_PATH="/usr/local/opt/mysql@5.7/lib/pkgconfig"

LDFLAGS="-L/usr/local/opt/ruby/lib"
LDFLAGS="$LDFLAGS -L/usr/local/opt/postgresql@15/lib"
LDFLAGS="$LDFLAGS -L/usr/local/opt/icu4c/lib -L/usr/local/lib"

# LDFLAGS="$LDFLAGS -L/usr/local/opt/openssl@1.1/lib"
# LDFLAGS="$LDFLAGS -L/usr/local/opt/valet-php@7.4/lib -L/usr/local/opt/valet-php@7.2/lib -L/usr/local/opt/php@8.1/lib"
# LDFLAGS="$LDFLAGS -L/usr/local/opt/bison/lib"
LDFLAGS="$LDFLAGS -L/usr/local/opt/mysql@5.7/lib"

# for Pike
# Have installed GMP manually, as brewed version was not linking correctly.
# LDFLAGS="$LDFLAGS -L/usr/local/Cellar/gmp/6.3.0/lib"
export LDFLAGS


PKG_CONFIG_PATH="/usr/local/opt/ruby/lib/pkgconfig /usr/local/opt/icu4c/lib/pkgconfig"
PKG_CONFIG_PATH="$PKG_CONFIG_PATH /usr/local/opt/openssl@1.1/lib/pkgconfigi"
PKG_CONFIG_PATH="$PKG_CONFIG_PATH /usr/local/opt/postgresql@15/lib/pkgconfig"
export PKG_CONFIG_PATH

export CHROME_EXECUTABLE=/Volumes/Oggun/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome

# I think this is for VIM Colors was weird with zsh
# export PS1="\[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h:\[\033[33;1m\]\w\[\033[m\]\$ "
# export CLICOLOR=1
# export LSCOLORS=ExFxBxDxCxegedabagacad

export SVN_EDITOR=vim


export VAGRANT_HOME=/Volumes/Oggun/vagrant_home

export NVM_DIR="/Users/mikekilmer/.nvm"
export NVM_DIR="$HOME/.nvm"
  [ -s "/usr/local/opt/nvm/nvm.sh" ] && \. "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
export COMPOSER_DISABLE_XDEBUG_WARN=1

## export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python
## export VIRTUALENVWRAPPER_VIRTUALENV=/usr/local/bin/virtualenv
## source /usr/local/bin/virtualenvwrapper.sh
## export WORKON_HOME=$HOME/.venv

# For curl as per https://stackoverflow.com/a/63931554/2223106
unsetopt nomatch
